*The qsys environment and string metrics

The README will tell you more about the system.

I've no longer got access to a Solaris system, so I'm only able to check
the build for Linux 32 bit: the l32/ directory.

** Overview

There are two components, a script system (qsys) and a runtime extension
(smet) for String Metrics.

The build of (smet) is optional and controlled by autogen.sh.

Its build and installation is a bit more complicated than usual because
I've made use of gnulib and gnulib-tool. If you build the String Metrics
component (smet), then you will need to link to the contrib/kx/kdb+/l32/c.o
file - see the C extensions cookbook notes. I've assumed that this object
file has been copied (or linked) to a local lib/ directory. (I've done this
rather than use SVN externals.)

On Debian-Linux systems, you would need to use install at least
 gnulib autoconf automake libtool
and then doxygen is useful.

You wouldn't need gnulib if you don't build (smet).

This build is for a automake developer: the "configure" scripts are
generated by this build.

The automake part of the build is performed by the autogen.sh
scripts. There are two of these: one in smet/ and 

The String Metrics component is optional.
 
The installation needs to run gnulib-tool on the smet directory. There is a
script autogen.sh that shows the steps. It may work for you if you have the
l32/ trial distribution.

* qsys deployment profile

If you just want qsys/, then you can use my script. It assumes you have the
l32/q executable.

** Packages

On Debian-Linux systems, you would need to install at least these

 autoconf automake libtool

and then doxygen is useful. If you want to try the smet also add

 gnulib 

for the check goal in the Makefile and for the runtime system you will also
to need to add

 rlwrap

** Configuring the automake build system

From qsys/ run 

 $ sh -x -e ./autogen.sh QHOME=$HOME/q

This then runs the automake utilities and my l32/ configure setup. After
which it should be possible to run 

 $ make all
 $ make install

Will place the shell scripts into ~/bin, a configuration file into
~/etc/q.rc and some supporting q scripts into ~/share/qsys.

* qsys and smet deployment profile

You can follow use my build script and follow the same instructions but the
initial invocation is

 $ sh -x -e ./autogen.sh QHOME=$HOME/q smet=enable

This then runs the automake utilities and my l32/ configure setup.

The build system will descend into the smet/ directory and build gnulib
components and then some C modules.

It assumes that c.o is available available from the same directory as the q
executable is.

* Configurable options: producing distributions

As noted above, the autogen.sh script is there for me to build the
system. You may need to build a distribution, in which case, you would 

 make dist

and then simply use ./configure. Usually one only wants to install in
one's own home directory and into the q executable directory

 ./configure --prefix=$HOME --with-qhomedir=$HOME/q

(There are other switches to change the name of the --with-qprogdir and the
name of the q executable --with-qprog.)

The installation has been tested with Linux, Darwin and Solaris. It assumes
that the q program directory will be $qhomedir/[lms][32|64]

That is ~/q/l32 for Linux 32-bit

If this doesn't work, you can try to override by setting 

 --with-progdir=~/q/x64

for example.

* String Metrics - the smet directory

The qsys environment comes with a C plugin for the q interpreter "smet".
The build is in in a sub-directory of this and is built by default. 
It uses an auxilary autoreconf phase. This may fail. The smet build needs
to have gnulib-tool run on it first, see the INSTALL file in the smet directory. 
After you've done that then a complete autoreconf should work.

The can be removed from the build using 

 --disable-string-metrics

This is a sub-build of the main qsys build.

--

If you want to extend the package you'll need at least automake 1.9

It's best to delete the contents of the config/ and smet/config/ 
directories and then

 autoconf --force

and then configure as normal.

--

The autogen.sh script also has a nodo option

 autogen.sh nodo=echo 

and a clean option

 autogen.sh clean=yes

--

It builds in the src directory. It just applies sed
transformations to scripts marked with .in suffix.

 make install

will do the following

 In the $qhomedir given on the command-line to configure, the q.q file
 will be deleted and replaced by a link to site.q

 A number of q script files are installed in ~/share/qsys

 The scripts Qp Qr and Qs are installed in ~/bin

 The configuration files use-q and q.rc are installed in ~/etc

 Other documentation files are installed. (These currently have
 nothing of use in them.)

The "string metrics" sub-package will also install into

 ~/share/qsys 
 ~/lib/qsys

--

There is no feature to uninstall.

--

The installation works on both Linux and Solaris - both 32bit.

** This file's Emacs file variables

[  Local Variables: ]
[  mode:text ]
[  mode:outline-minor ]
[  mode:auto-fill ]
[  fill-column: 75 ]
[  coding: iso-8859-1-unix ]
[  comment-column:50 ]
[  comment-start: "[  "  ]
[  comment-end:"]" ]
[  End: ]
